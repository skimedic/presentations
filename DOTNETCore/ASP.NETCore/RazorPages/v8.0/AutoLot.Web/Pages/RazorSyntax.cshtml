@page
@model AutoLot.Web.Pages.RazorSyntaxModel
@{
    //can be set here or in the code behind
    //ViewData["Title"] = "Razor Syntax"; 
}
<h1>Razor Syntax</h1>
@for (int i = 0; i < 15; i++) { /*do something here */ } 
@{
    //Code Block
    var foo = "Foo";
    var bar = "Bar";
    var htmlString = "<ul><li>one</li><li>two</li></ul>";
}
@foo<br />
@htmlString<br />
@foo.@bar<br />
@foo.ToUpper()<br/>
@Html.Raw(htmlString)<br/>
<hr />
@{
    @:Straight Text
    <div>Value:@Model.Entity.Id</div>
    <text>
        Lines without HTML tag
    </text>
    <br />
}
<hr/>
Email Address Handling:<br/>
foo@foo.com<br />
@@foo<br/>
test@foo<br/>
test@(foo)<br />
@*
  Multiline Comments
  Hi.
*@
@functions {
    public static IList<string> SortList(IList<string> strings)  
    {
        var list = from s in strings orderby s select s;
        return list.ToList();
    }
}
@{
    var myList = new List<string> {"C", "A", "Z", "F"};
    var sortedList = SortList(myList); 
}
@foreach (string s in sortedList)
{
    @s@:&nbsp;
}
<hr/>
@{
    Func<dynamic, object> b = @<strong>@item</strong>;
}
This will be bold: @b("Foo")
<hr/>
The Car named @Model.Entity.PetName is a <span style="color:@Model.Entity.Color">@Model.Entity.Color</span> @Model.Entity.MakeNavigation.Name
<hr/>
Display For examples
Make:
@Html.DisplayFor(x=>x.Entity.MakeNavigation)
Car:
<div class="container">
    @Html.DisplayFor(c=>c.Entity,"Cars/DisplayTemplates/Car.cshtml")
    <hr/>
    @Html.DisplayFor(c=>c.Entity,"Cars/DisplayTemplates/CarWithColors.cshtml")
</div>
Car Editor:
@Html.EditorFor(c=>c.Entity, "Cars/EditorTemplates/Car.cshtml")
<hr/>
<a asp-page="/Cars/Details" asp-route-id="@Model.Entity.Id">@Model.Entity.PetName</a>
